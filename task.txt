
2. 感知器增加发生错误时重新规划的接口，需要终止全部的子进程和子线程，然后主进程规划器启动，再按顺序执行；所以需要线程和进程的管理；

4. 集中式启动中存在的问题：上升高度不够，随机飞行算法需要改进,无人机感知器不准确，导致稳定性差


日志系统：
每次系统启动，就是一个任务的执行，会有一个唯一标识符id，创建一个这个id的文件，用于记录本次任务的所有日志和消息
分别是：
task.log: 记录任务相关的日志，从任务接收器到任务调度器
drone_xxx.log: 记录无人机相关的日志，无人机执行器，无人机监控器，无人机感知器的日志
script_xxx.log: 记录xxx脚本执行中的日志
connect.log: 记录有关于网络连接的日志
message_xxx.log: 记录xxx设备接收到的消息的日志

关于消息的设计
message的格式要求：        
{
    msg_type:"",
    msg_len:"",
    msg_content:"",
}
1. 发送脚本的消息：
类型是"script"，内容就是 脚本代码
2. 通知任务进度的消息
类型是"task_progress"，内容是 {"task":"task.name","state":"finish/error/running","reason":"reason"}
3. 启动通知的消息
类型是"start_notice"，内容是 {"finished_task":"task.name"}
4. 错误消息
类型是"error"，内容 
5. 传递数据的消息
类型是"data"，内容是 {"data_name":"data_content"}
数据的种类有：
position:[x,y,z]
time：duration

1. 提前启动无人机，使其能够正确的建立连接
2. 维持连接的部分写的p2pnode里面，通过add添加需要连接的设备，由p2pnode一直尝试连接
3. 消息的类型
3. 测试是否能够正常启动
