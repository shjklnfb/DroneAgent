1 任务规划后的子任务存储与输出：
   1）每个任务有一个独立的ID（可以自动生成GUID），每个任务以ID和其他人容易识别的标识一起，合成任务的名称，
    2) 创建一个独立的文件夹。每个任务的所有子任务脚本存放在任务文件夹下，命名为：subtask_taskid_subtaskid.py
2 任务调度器：
   1) 任务调度器的初始化代码不动态生成，可以通过参数，配置文件的方式来适配不同的初始化
   2 任务调度器启动一个无人机实例时，封装一个函数，函数中实现无人机的启动（适配将来无人机进程和 调度器进程不在同一个进程空间内，甚至不在同一个物理机内）
3 无人机
  1）每个无人机实例应该在启动的时候就初始化一下通信的频道和队列
  2）无人机的执行器从特定频道内读取子任务脚本，并加载运行。每个子任务完成后向任务调度器进行汇报。
  3）无人机的监控器定期向任务调度器汇报
  4）无人机本身一旦启动，在没有得到明确的停止关机命令之前，一定是保持最后的状态。正常的结束流程是：调度器发布返航，调度器确认返航成功后再发布关机命令。

需要重点考虑的问题：
如果有一个以上的无人机执行任务，且无人机之间需要在任务期间通信的情况下，如何进行各个无人机的初始化和环境初始化。 因为在生成子任务的时候，就要调用通信代码，向哪个节点发布一个什么类型的消息。